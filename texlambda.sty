\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{texlambda}[2016/03/09 Typesetting for the untyped lambda calculus]

\RequirePackage{suffix}
\RequirePackage{amsmath}
\RequirePackage{amsfonts}
\RequirePackage{xifthen}
\RequirePackage{etoolbox}

\newcommand{\LcFlags}{}
\newcommand{\lcflags}[1]{
  \ifthenelse{\equal{#1}{}}{
    \renewcommand{\LcFlags}{}
  }{
    \renewcommand{\LcFlags}{-#1}
  }
}

\newcommand\lc[2][]{%
  \ifstrempty{#1}{%
    % Si no se pasan banderas se utilizan las que están en la variable \LcFlags.
    \immediate\write18{\unexpanded{./texlambda -e} \LcFlags \unexpanded{ " #2 " > lc-buf.tex}} \input{lc-buf.tex}
  }{%
    % Si se pasan banderas, se utilizan.
    \immediate\write18{\unexpanded{./texlambda -e -#1 " #2 " > lc-buf.tex}} \input{lc-buf.tex}
  }%
}

\WithSuffix\newcommand\lc*[2][]{
  \ifstrempty{#1}{
    \immediate\write18{\unexpanded{./texlambda } \LcFlags \unexpanded{ " #2 " > lc-buf.tex}} \input{lc-buf.tex}
  }{
    \immediate\write18{\unexpanded{./texlambda -#1 " #2 " > lc-buf.tex}} \input{lc-buf.tex}
  }
}

\newcommand{\betaredu}{$\beta$-reducción}

\newcommand{\alphaconv}{$\alpha$-conversión}

\newcommand{\alphacong}{$\alpha$-congruente}

\newcommand{\synteq}{\equiv}

\newcommand{\termlen}[1]{\left\lVert#1\right\rVert}


\DeclareRobustCommand{\TeXLaMbDa}{
  \TeX-$\mathcal{L\!\!{\scriptstyle A}\!M\!^{B}\!D\!}\boldsymbol{{\scriptstyle \lambda}}$
}
